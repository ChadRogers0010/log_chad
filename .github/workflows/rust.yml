name: Rust CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    environment: db_test  # ðŸ‘ˆ This tells GitHub to pull from your "db_test" environment
    services:
      postgres:
        image: postgres:15
        ports: ["5432:5432"]
        env:
          POSTGRES_USER: testuser     # <-- hardcoded, NOT secret reference
          POSTGRES_PASSWORD: testpass # <-- hardcoded, NOT secret reference
          POSTGRES_DB: testdb         # <-- hardcoded, NOT secret reference
        options: >-
          --health-cmd="pg_isready -U testuser"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DATABASE_URL: postgres://${{ secrets.DB_USER }}:${{ secrets.DB_PASS }}@localhost:5432/${{ secrets.DB_NAME }}

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install SQLx CLI
        run: cargo install sqlx-cli --no-default-features --features postgres

      - name: Prepare Database
        run: |
          sqlx database create
          sqlx migrate run
          cargo sqlx prepare --workspace -- --all-targets

      - name: Run Tests (Offline Mode)
        env:
          SQLX_OFFLINE: true
        run: cargo test --workspace --all-features
